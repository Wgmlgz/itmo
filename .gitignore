# SUS
*test

# LaTeX stuff
# LaTeX temporary files
*.aux
*.log
*.toc

# Random latex file idk
*.fls

# PDF output - usually a bad idea to keep this in Git
# *.pdf 

# Latexmk
*.fdb_latexmk

# SyncTeX
*.synctex.gz

# LaTeX Beamer
*.snm
*.vrb
*.nav
*.out

# BibTeX
*.bbl
*.blg

# Java struff
# Compiled class file
*.class

# Log file
*.log

# BlueJ files
*.ctxt

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
# *.jar
*.war
*.nar
*.ear
*.zip
*.tar.gz
*.rar

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*
replay_pid*


# Rust struff

# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class


# Gradle
.gradle
!src/**/build/

# Ignore Gradle GUI config
gradle-app.setting

# Avoid ignoring Gradle wrapper jar file (.jar files are usually ignored)
!gradle-wrapper.jar

# Avoid ignore Gradle wrappper properties
!gradle-wrapper.properties

# Cache of project
.gradletasknamecache

# Eclipse Gradle plugin generated files
# Eclipse Core
.project
# JDT-specific (Eclipse Java Development Tools)
.classpath
.DS_Store

node_modules/
/ai/.venv
/ai/.venv
/ai/l3/env
/ai/l3/env
/distributed-computing/l1/pa1_results
distributed-computing/l2/src/pa2
/distributed-computing/l4/pa4_results
